DFT-FE (Real Space finite-element based KSDFT implementation)

*********************************************
Installation of libraries required for dftfe:
*********************************************

1) Install deal.II after cloning from https://dsambit@bitbucket.org/dftfedevelopers/dealiiopt.git
[Note: DFT-FE is primarily based on the deal.II library. If you have particular questions about deal.II, contact the 
deal.II discussion groups (https://www.dealii.org/mail.html)]
  -- Clone deal.II library from http://www.dealii.org/developer/readme.html
  -- Follow installation instructions from https://www.dealii.org/8.5.0/readme.html
  -- MPI and p4est libraries must be installed as prerequisites if they are not already installed.
  -- If not compiled as part of deal.II, install Petsc and Slepc with both real (For Non-periodic problems) and complex (For Periodic problems) data types.

2) Install Alglib, Libxc, and Spglib

  -- http://www.alglib.net/
      * Download Alglib free C++ edition
      * After downloading go to $HOME/alglib/cpp/src, create shared library by first compiling all cpp files and then linking them to a shared library.
            Eg: To compile using g++ compiler do "g++ -c -fPIC *.cpp" and then to link into a shared library do "g++ *.o -shared -o libAlglib.so"

  -- http://octopus-code.org/wiki/Libxc

  -- https://atztogo.github.io/spglib/

**********************
Installation of dftfe:
**********************

(1) Loading of relevant modules:
      -- Modules related to cmake, compilers, openmpi has to be loaded.
        For example on flux systems located at umich, you may need to do 
          $ module load cmake
          $ module load intel/17.0.1
          $ module load openmpi/1.10.2/intel/17.0.1
          $ module load mkl

(2) Cloning the repository:
      -- Execute the following commands on your command-line
         $ git clone https://userid@bitbucket.org/dftfedevelopers/dftfe.git
         $ cd dftfe
         $ git checkout master

(3) Setting the relevant paths in CMakeLists.txt:          
      -- Open the file CMakeLists.txt in the dftfe folder and set the include and library paths for alglib, libxc, petsc, slepc as follows:
         SET(ALGLIB_INCLUDE "path to alglib include folder")
         SET(ALGLIB_LIB "path to alglib library libAlglib.so")

         SET(LIBXC_INCLUDE "path to libxc include folder")
         SET(LIBXC_LIB  "path to libxc library libxc.a")

         SET(PETSC_REAL_INCLUDE "path to petsc-double include")
         SET(PETSC_REAL_LIB "path to petsc-double library libpetsc.so")

         SET(SLEPC_REAL_INCLUDE "path to slepc-double include")
         SET(SLEPC_REAL_LIB "path to slepc-double library libslepc.so")

         SET(PETSC_COMPLEX_INCLUDE "path to petsc-complex include")
         SET(PETSC_COMPLEX_LIB "path to petsc-complex library libpetsc.so")
         
         SET(SLEPC_COMPLEX_INCLUDE "path to slepc-complex include")
         SET(SLEPC_COMPLEX_LIB "path to slepc-complex library libslepc.so")

         SET(SPG_INCLUDE "/home/vikramg/DFT-FE-softwares/softwareCentos/spglib/include")
         SET(SPG_LIB "/home/vikramg/DFT-FE-softwares/softwareCentos/spglib/lib/libsymspg.so") 

         SET(DEAL_II_DIR "/home/vikramg/DFT-FE-softwares/softwareCentos/dealiiDev/intel_17.0.1_nopetsc_mkl_noavx_opt")

(4) Installing the dftfe code:
      -- Do the following from your command line
          $ ./setup.sh (You may need to set permissions. e.g.: $ chmod u+x setup.sh)


Execution: 

1) Do the following from the folder containing parameterFile.prm:
  -- $ mpirun -np numProcs ./dftRun parameterFile.prm (You may need to set permissions for dftRun. e.g.: $ chmod u=+x dftRun)
  -- Note: numProcs is the number of parallel processes supplied to mpirun. For serial runs numProcs is 1.
See README.txt for more detailed information on execution of dftfe code.
